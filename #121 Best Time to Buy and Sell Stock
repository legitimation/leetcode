Brute Force # does not work due to certain input cases 

class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        maxprofit = 0
        for i in range(len(prices) - 1):
            for j in range(i+1, len(prices)):
                if prices[j] - prices[i] > maxprofit:
                    maxprofit = prices[j] - prices[i]
        return maxprofit
 
 --selfmade, reasonable enough, practical
 
 class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        minprice = sys.maxsize
        maxprofit = 0
        for i in range(len(prices)):
            if prices[i] - minprice > maxprofit:
                maxprofit = prices[i] - minprice
            elif minprice > prices[i]:
                minprice = prices[i]
        return maxprofit


-- clean solution, impressive

def maxProfit(prices):
    max_profit, min_price = 0, float('inf')
    for price in prices:
        min_price = min(min_price, price)
        profit = price - min_price
        max_profit = max(max_profit, profit)
    return max_profit
