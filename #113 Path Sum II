# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def pathSum(self, root: TreeNode, sum: int) -> List[List[int]]:
        ans = []
        self.dfs(root, sum, [], ans)
        return ans
        
    def dfs(self, root: TreeNode, sum: int, ls : List, ans : List):
        if root:
            if not root.left and not root.right and sum == root.val:
                ls.append(root.val)
                ans.append(ls)
            self.dfs(root.left, sum - root.val, ls + [root.val], ans)
            self.dfs(root.right, sum - root.val, ls + [root.val], ans)
    
