https://leetcode.com/problems/valid-parentheses/submissions/
#20 Valid Parentheses


class Solution:
    def isValid(self, s: str) -> bool:
        while "()" in s or "{}" in s or "[]" in s:
            s = s.replace("()", "").replace("{}", "").replace("[]", "")
        return  s == ""
        
        
class Solution:
    def isValid(self, s: str) -> bool:
        map = {"(": ")", "[": "]",  "{": "}"}
        openbrackets = ["(", "[", "{"]
        stack = []
        for i in s:
            if i in openbrackets:
                stack.append(i)
            elif stack and i == map[stack[-1]]: 
                # stack and i is required to consider index out of range case i.e "]"
                    stack.pop()
            else:
                return False
        return stack == []
