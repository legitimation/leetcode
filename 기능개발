def solution(progresses, speeds):
    idx = 0
    answer = []
    progresses.append(0), speeds.append(0)
    while True:
        count = 0
        for i in range(len(progresses)):
            progresses[i] += speeds[i]
        if idx == len(progresses) - 1:
            break
        while progresses[idx] >= 100 and idx < len(progresses) - 1:
            idx += 1
            count += 1
        if count > 0:
            answer.append(count)
    return answer
    
# using pop method

def solution(progresses, speeds):
    answer = []
    time = 0
    count = 0
    while len(progresses)> 0:
        if (progresses[0] + time*speeds[0]) >= 100: 
            progresses.pop(0)
            speeds.pop(0)
            count += 1      
        else:
            if count > 0:
                answer.append(count)
                count = 0
            time += 1
    answer.append(count)
    return answer
    
    
#calc math.ceil

import math
def solution(progresses, speeds):
    progresses = [math.ceil((100 - a) / b) for a, b in zip(progresses, speeds)]
    answer = []
    front = 0, 0
    for idx in range(len(progresses)):
        if progresses[idx] > progresses[front]:  
            answer.append(idx - front)
            front = idx 
    answer.append(len(progresses) - front)  
    return answer
